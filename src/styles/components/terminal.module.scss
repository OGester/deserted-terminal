@use "src/styles/variables" as variable;

.terminal {
  min-height: 200px;
}

.rules {
  width: 30em;
  height: 10em;
  margin-top: 1rem;
  margin-left: 15px;
  background: radial-gradient(circle, #555 50%, transparent 50.2%) 0.5em 0.4em /
      0.8em 0.8em,
    radial-gradient(circle, #555 50%, transparent 50.2%) 1.3em 0.4em / 0.8em
      0.8em,
    radial-gradient(circle, #555 50%, transparent 50.2%) 2.1em 0.4em / 0.8em
      0.8em,
    linear-gradient(#333, #333) 0 0 / 100% 1.5em, #1e1e1e;
  background-repeat: no-repeat;
  border-radius: 0.6em;
  box-shadow: 0 0 0 0.1em rgba(255, 255, 255, 0.2),
    0 1em 1.5em -0.6em rgba(0, 0, 0, 0.7),
    0 0.6em 0.5em -0.6em rgba(0, 0, 0, 0.5);
  padding: 7px 4px;
}

.typingDemo {
  width: 18em;
  animation: typing 2s steps(22), flicker 3s infinite;
  white-space: nowrap;
  overflow: hidden;
  font-family: monospace;
  font-size: 1.1em;
  color: variable.$color-terminal-text;
  position: relative;
  top: 2.4rem;
  left: 0.7rem;
  margin-bottom: 12px;
}

.typingDemoTwo {
  width: 25em;
  animation: typing 2s steps(22), fadeIn 0.1s forwards, flicker 3s infinite;
  animation-delay: 2.5s, 2.5s, 2.5s; /* delays for all three animations */
  white-space: nowrap;
  overflow: hidden;
  font-family: monospace;
  font-size: 1.1em;
  color: variable.$color-terminal-text;
  position: relative;
  top: 2.2rem;
  left: 0.7rem;
  opacity: 0;
  margin-bottom: 12px;
}

.typingDemoThree {
  width: 23em;
  animation: typing 2s steps(22), blink 0.5s step-end infinite alternate,
    fadeIn 0.1s forwards, flicker 3s infinite;
  animation-delay: 5s, 5s, 5s; /* delays for all three animations */
  white-space: nowrap;
  overflow: hidden;
  border-right: 3px solid;
  font-family: monospace;
  font-size: 1.1em;
  color: variable.$color-terminal-text;
  position: relative;
  top: 2.2rem;
  left: 0.7rem;
  opacity: 0;
}

/* Add new fadeIn animation */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes typing {
  from {
    width: 0;
  }
}

@keyframes blink {
  50% {
    border-color: transparent;
  }
}

@keyframes flicker {
  0%,
  19%,
  21%,
  23%,
  25%,
  54%,
  56%,
  100% {
    opacity: 1;
    text-shadow: 0 0 1px variable.$color-terminal-glow,
      0 0 2px variable.$color-terminal-glow,
      0 0 5px variable.$color-terminal-glow;
  }

  20%,
  22%,
  24%,
  55% {
    opacity: 0.6;
    text-shadow: none;
  }
}

@media (max-width: 768px) {
  .terminal {
    min-height: 160px; // slightly smaller for mobile
    max-width: 60%;
  }

  .rules {
    width: 90vw; // use relative width to screen
    min-height: 160px; // let content define height
    margin-left: auto;
    margin-right: auto;
    padding: 0.5rem;
    border-radius: 0.4em;

    //background-size: 1em 1em; // reduce pattern size
    //background-position: 0.3em 0.3em, 1.1em 0.3em, 1.9em 0.3em, 0 0;
  }

  .typingDemo,
  .typingDemoTwo,
  .typingDemoThree {
    font-size: 0.75em; // optionally reduce for smaller screens
    top: 2.5rem;
    margin-bottom: 0.5rem;
  }

  .typingDemoThree {
    border-right: 2px solid; // scale down border
  }
}

/* @media only screen and (-webkit-min-device-pixel-ratio: 2),
  only screen and (min--moz-device-pixel-ratio: 2),
  only screen and (-o-min-device-pixel-ratio: 2/1),
  only screen and (min-device-pixel-ratio: 2),
  only screen and (min-resolution: 192dpi),
  only screen and (min-resolution: 2dppx) {
  .terminal {
    min-height: 180px;
  }

  .rules {
    width: 19em;
    height: 8em;
    margin-top: 0rem;
    padding: 10px 2px;
    position: relative;
    right: 0.5rem;
  }

  .typingDemo {
    font-size: 0.9em;

    top: 2rem;
    margin-bottom: 0px;
  }

  .typingDemoTwo {
    font-size: 0.9em;
    margin-bottom: 5px;
  }

  .typingDemoThree {
    font-size: 0.9em;
  }
} */
